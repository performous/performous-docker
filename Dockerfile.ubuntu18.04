## Use the official Ubuntu 18.04 Image from Dockerhub
FROM docker.io/library/ubuntu:18.04

## Set up environment variables so the tzdata install doesn't
## hang on asking for user input for configuration
ARG DEBIAN_FRONTEND="noninteractive"
ARG TZ="America/New_York"

## Install the deps and create the build directory
RUN apt-get update && apt-get install -y wget gpg software-properties-common &&\
    wget -nc https://apt.kitware.com/keys/kitware-archive-latest.asc &&\
    apt-key add kitware-archive-latest.asc &&\
    echo 'deb https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null &&\
    add-apt-repository -y ppa:git-core/ppa &&\
    apt-get update &&\
    rm kitware-archive-latest.asc &&\
    apt-get install -y --no-install-recommends git cmake clang-9 gcc-8 g++-8\
      gettext help2man libopenblas-dev libfftw3-dev libicu-dev libepoxy-dev\
      libsdl2-dev libfreetype6-dev libpango1.0-dev librsvg2-dev libxml++2.6-dev\
      libavcodec-dev libavformat-dev libswscale-dev libjpeg-dev\
      portaudio19-dev libglm-dev libboost-filesystem-dev\
      libboost-iostreams-dev libboost-locale-dev libboost-system-dev\
      libboost-program-options-dev libssl-dev libcpprest-dev libportmidi-dev\
      libopencv-dev libaubio-dev nlohmann-json-dev python3 python3-pip python3-setuptools\
      python3-wheel ninja-build file &&\
    pip3 install --user meson &&\
    apt-get clean &&\
    ## Set python to python3
    update-alternatives --install /usr/bin/python python /usr/bin/python3.6 10 &&\
    mkdir /root/performous

## Set the default compiler that cmake will use, otherwise it throws an error.
ENV CC=gcc-8
ENV CXX=g++-8

## Uncomment these to use clang instead
# ENV CC=clang-9
# ENV CXX=clang++-9

## Add the meson installation to the path
ENV PATH=/root/.local/bin:$PATH

## Copy in the build script to make things easy
COPY build_performous.sh /root/performous/build_performous.sh

WORKDIR /root/performous
